plugins {
    // This plugin allows me to check if there are any updates available for any of the dependencies.
    // From the root directory, run 'gradle dependencyUpdates'. It won't make changes, but print out the latest versions.
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'java-library'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'

group = 'com.mayhew3.postgresobject'

version = '0.17.9'

sourceCompatibility = 11
targetCompatibility = 11

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'org.postgresql:postgresql:42.2.2'
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'joda-time:joda-time:2.9.9'
    implementation 'com.github.jitpack:gradle-simple:1.0'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
    implementation group: 'org.jetbrains', name: 'annotations', version: '17.0.0'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.22'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.easytesting:fest-assert-core:2.0M10'
    testImplementation 'org.assertj:assertj-joda-time:2.2.0'
    testImplementation 'org.mockito:mockito-core:2.18.3'
}

task mainJar(type: Jar) {
    baseName = 'main'
    from sourceSets.main.output + sourceSets.main.allJava
}

task testJar(type: Jar) {
    baseName = 'tests'
    from sourceSets.test.output + sourceSets.test.allJava
}

artifacts {
    archives mainJar
    archives testJar
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

// this step is necessary when installing both jars in the local maven repository
install {
    repositories.mavenInstaller {
        addFilter('main') { artifact, file -> artifact.name.endsWith('main') }
        addFilter('tests') { artifact, file -> artifact.name.endsWith('tests') }
    }
}